// script.js
const notificationsContainer = document.getElementById("notifications");
const requestPermissionButton = document.getElementById("request-permission");

// Fonction pour afficher une notification dans la page
function showNotification(message) {
  const notification = document.createElement("div");
  notification.classList.add("notification");
  notification.innerHTML = `
    <span>${message}</span>
    <span class="close" onclick="this.parentElement.remove()">‚úñ</span>
  `;
  notificationsContainer.appendChild(notification);

  // Supprimer automatiquement apr√®s 5 secondes
  setTimeout(() => notification.remove(), 5000);
}

// Fonction pour envoyer une notification syst√®me
function sendSystemNotification(title, body) {
  if (Notification.permission === "granted") {
    new Notification(title, {
      body: body,
      icon: "https://cdn-icons-png.flaticon.com/512/1163/1163624.png", // Ic√¥ne m√©t√©o
    });
  } else {
    showNotification("‚ö†Ô∏è Autorisez les notifications dans le navigateur !");
  }
}

// V√©rifier la m√©t√©o (exemple avec des donn√©es fictives)
function checkWeather() {
  // Exemple de donn√©es m√©t√©o
  const weatherData = {
    city: "Paris",
    condition: "Pluie",
    temperature: 10,
  };

  // Cr√©er une notification en fonction des conditions m√©t√©o
  if (weatherData.condition === "Pluie") {
    showNotification(`üåßÔ∏è Il pleut actuellement √† ${weatherData.city}.`);
    sendSystemNotification(
      "Alerte m√©t√©o",
      `Il pleut √† ${weatherData.city}. Temp√©rature : ${weatherData.temperature}¬∞C.`
    );
  } else {
    showNotification(`‚òÄÔ∏è Temps clair √† ${weatherData.city}.`);
  }
}

// Demander la permission pour les notifications syst√®me
function requestNotificationPermission() {
  if (Notification.permission !== "granted") {
    Notification.requestPermission().then(permission => {
      if (permission === "granted") {
        showNotification("üéâ Notifications activ√©es !");
      } else {
        showNotification("‚ö†Ô∏è Les notifications ont √©t√© refus√©es.");
      }
    });
  } else {
    showNotification("‚úÖ Les notifications sont d√©j√† activ√©es.");
  }
}

// Activer les notifications au clic sur le bouton
requestPermissionButton.addEventListener("click", requestNotificationPermission);

// Simuler une v√©rification m√©t√©o toutes les 30 secondes
setInterval(checkWeather, 30000);

// V√©rification initiale
checkWeather();
